plugins {
  id "java"
  id "application"
  id "checkstyle"
  id "com.github.spotbugs" version "3.0.0"
  id 'org.openjfx.javafxplugin' version '0.0.8'
}

repositories {
  jcenter()
}

dependencies {
	implementation "org.openjfx:javafx-base:11.0.2"
	implementation "org.openjfx:javafx-controls:11.0.2"
	implementation "org.openjfx:javafx-graphics:11.0.2"
	testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
	testImplementation 'org.mockito:mockito-core:3.2.4'
	testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.1.11'
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'org.hildan.fxgson:fx-gson:3.1.2'
}

javafx {
    modules = [ 'javafx.controls', 'javafx.graphics']
    version = '11.0.2'
}

mainClassName = 'de.lmu.ifi.sosylab.fddlj.ReversiMain'

application {
    mainClassName = "$mainClassName"
}

run {
	doFirst {
		jvmArgs = [
			'--module-path', classpath.asPath,
			'--add-modules', 'javafx.controls',
			'--add-modules', 'javafx.graphics',
			'--add-modules', 'javafx.media'
		]
	}
}

jar {
  manifest {
    attributes(
      'Main-Class': "$mainClassName"
    )
  }
  from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


checkstyle {
  configFile = file('test/checkstyle.xml')
  maxWarnings = 0
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

